<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.0.xsd     
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 定时器开关 开始 -->
	<task:annotation-driven />
	<!-- 定时器开关 结束 -->
	<!-- 标注类型 的事务配置 -->
	<tx:annotation-driven />
	<!-- 读取资源文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${driverClassName}</value>
		</property>
		<property name="password">
			<value>${password}</value>
		</property>
		<property name="username">
			<value>${username}</value>
		</property>
		<property name="url">
			<value>${url}</value>
		</property>
	</bean>

	<!-- 嵌入式内存中数据库 -->
	<!-- <jdbc:embedded-database id="dataSource" type="H2"> <jdbc:script location="classpath:sql/h2/schema.sql" 
		/> <jdbc:script location="classpath:org/activiti/db/create/activiti.h2.create.engine.sql" 
		/> <jdbc:script location="classpath:org/activiti/db/create/activiti.h2.create.history.sql" 
		/> <jdbc:script location="classpath:org/activiti/db/create/activiti.h2.create.identity.sql" 
		/> </jdbc:embedded-database> <bean class="me.kafeitu.modules.test.data.DataInitializer" 
		lazy-init="false"> <property name="dataSource" ref="dataSource" /> <property 
		name="dataFile" value="/data/sample-data.xml" /> </bean> -->
	<!-- 初始化默认数据 -->
	<!-- <beans profile="test"> <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="driverClassName" value="org.h2.Driver" 
		/> <property name="url" value="jdbc:h2:mem:WebMagic;DB_CLOSE_DELAY=-1" /> 
		</bean> <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL"> 
		<jdbc:script location="classpath:sql/h2/schema.sql" /> </jdbc:initialize-database> 
		</beans> -->

	<!-- <beans profile="standalone"> <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="driverClassName" value="org.h2.Driver" 
		/> <property name="url" value="jdbc:h2:file:I:\\sourceforge\\apache\\h2\\h2-2015-04-10\\h2\\data\\safeguard;AUTO_SERVER=TRUE" 
		/> </bean> Refer to https://github.com/springside/springside4/wiki/H2-Database 
		<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL"> 
		<jdbc:script location="classpath:sql/h2/schema.sql" /> <jdbc:script location="classpath:data/h2/import-data.sql" 
		encoding="UTF-8"/> </jdbc:initialize-database> </beans> -->



	<bean id="pagePlugin" class="com.yilami.pulgin.mybatis.plugin.PagePlugin">
		<property name="properties">
			<props>
				<prop key="dialect">com.yilami.pulgin.jdbc.dialet.H2Dialect</prop>
				<prop key="pageSqlId">.*query.*</prop>
			</props>
		</property>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="plugins">
			<array>
				<ref bean="pagePlugin" />
			</array>
		</property>
		<property name="mapperLocations">
			<list>
				<!-- 自动匹配Mapper映射文件 -->
				<value>classpath:com/yilami/entity/*-mapper.xml</value>
			</list>
		</property>
	</bean>
	<!-- 用自动扫描 就要用mybatis的接口,仓储类接口，这个项目没有用到ｍｙｂｂａｉｔｓ的接口方式所以不要以下扫描 否则会出现 org.mybatis.spring.mapper.MapperScannerConfigurer$Scanner.main 
		No MyBatis mapper was found in 'com.yilami.dao.impl' package. Please check 
		your configuration. 警告 -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> <property 
		name="basePackage" value="com.yilami.dao.impl" /> </bean> -->
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<aop:config>
		<aop:pointcut
			expression="execution(public * com.yilami.service.impl.*Impl.*(..))"
			id="pointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- <bean id="log4jHandlerAOP" class="com.yilami.log.LogController"></bean> 
		<aop:config proxy-target-class="true"> <aop:aspect id="logAspect" ref="log4jHandlerAOP"> 
		<aop:pointcut id="logPointCut" expression="execution(* com.yilami.dao.impl.*.* 
		(..))" /> <aop:around method="logAll" pointcut-ref="logPointCut" /> </aop:aspect> 
		</aop:config> -->

	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<context:component-scan base-package="com.yilami.dao" />
	<context:component-scan base-package="com.yilami.service" />
	<context:component-scan base-package="com.yilami.log" />
	<context:component-scan base-package="com.yilami.security" />
	<context:component-scan base-package="com.yilami.task" />
	<!-- 隐式地向 Spring 容器注册 -->
	<context:annotation-config />
</beans>